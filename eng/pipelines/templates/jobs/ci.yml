parameters:
  - name: Artifacts
    type: object
    default: []
  - name: TestPipeline
    type: boolean
    default: false
  - name: ArtifactName
    type: string
    default: packages
  - name: SDKType
    type: string
    default: all
  - name: ServiceDirectory
    type: string
    default: not-specified
  - name: BuildSnippets
    type: boolean
    default: true
  - name: CheckAOTCompat
    type: boolean
    default: false
  - name: AOTTestInputs
    type: object
    default: []
  - name: TestSetupSteps
    type: stepList
    default: []
  - name: TestTimeoutInMinutes
    type: number
  - name: MatrixConfigs
    type: object
  - name: AdditionalMatrixConfigs
    type: object
    default: []
  - name: MatrixFilters
    type: object
    default: []
  - name: MatrixReplace
    type: object
    default: []
  - name: TestDependsOnDependency
    type: string
    default: not-specified
  - name: LimitForPullRequest
    type: boolean
    default: false

jobs:
  - job: BuildWindows
    pool:
      name: $(WINDOWSPOOL)
      image: $(WINDOWSVMIMAGE)
      os: windows

    variables:
      Codeql.Enabled: true
      Codeql.BuildIdentifier: ${{ parameters.ServiceDirectory }}
      Codeql.SkipTaskAutoInjection: false
      SDKType: ${{ parameters.SDKType }}

    steps:
      - ${{ if not(contains(variables['Build.DefinitionName'], '-pr - ')) }}:
        - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
          parameters:
            Paths:
              - "/*"
              - "!SessionRecords"
      - template: /eng/pipelines/templates/steps/install-dotnet.yml
      - template: /eng/common/pipelines/templates/steps/set-test-pipeline-version.yml
        parameters:
          PackageName: "Azure.Template"
          ServiceDirectory: "template"
          TestPipeline: ${{ parameters.TestPipeline }}
      - template: /eng/common/pipelines/templates/steps/set-default-branch.yml
      - pwsh: |
          echo "##vso[build.addbuildtag]Scheduled"
        displayName: "Tag scheduled builds"
        condition: and(eq(variables['Build.SourceBranchName'],variables['DefaultBranch']),eq(variables['Build.Reason'],'Schedule'))
      # Set env variable SkipDevBuildNumber to generate package properties with non alpha version
      # Package version is used to create or update package work item from CI pipeline
      - pwsh: |
          echo "##vso[task.setvariable variable=SkipDevBuildNumber]true"
        displayName: "Set SkipDevBuildNumber env variable"
      - template: /eng/common/pipelines/templates/steps/daily-dev-build-variable.yml

      - pwsh: >
          dotnet build /t:ProjectDependsOn ./eng/service.proj
          /p:TestDependsOnDependency="Azure.Core"
          /p:IncludeSrc=false /p:IncludeStress=false /p:IncludeSamples=false
          /p:IncludePerf=false /p:RunApiCompat=false
          /p:InheritDocEnabled=false /p:BuildProjectReferences=false
          /p:OutputProjectFilePath="$(Build.SourcesDirectory)/Azure.Core_dependencylist.txt"
          /binaryLogger:LogFile=$(Build.ArtifactStagingDirectory)/save-package-props.binlog

      - template: /eng/common/pipelines/templates/steps/publish-1es-artifact.yml
        parameters:
          artifactName: BuildWindows
          artifactPath: $(Build.ArtifactStagingDirectory)

  - job: BuildLinux
    pool:
      name: $(LINUXPOOL)
      image: $(LINUXVMIMAGE)
      os: linux

    variables:
      Codeql.Enabled: true
      Codeql.BuildIdentifier: ${{ parameters.ServiceDirectory }}
      Codeql.SkipTaskAutoInjection: false
      SDKType: ${{ parameters.SDKType }}

    steps:
      - ${{ if not(contains(variables['Build.DefinitionName'], '-pr - ')) }}:
        - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
          parameters:
            Paths:
              - "/*"
              - "!SessionRecords"
      - template: /eng/pipelines/templates/steps/install-dotnet.yml
      - template: /eng/common/pipelines/templates/steps/set-test-pipeline-version.yml
        parameters:
          PackageName: "Azure.Template"
          ServiceDirectory: "template"
          TestPipeline: ${{ parameters.TestPipeline }}
      - template: /eng/common/pipelines/templates/steps/set-default-branch.yml
      - pwsh: |
          echo "##vso[build.addbuildtag]Scheduled"
        displayName: "Tag scheduled builds"
        condition: and(eq(variables['Build.SourceBranchName'],variables['DefaultBranch']),eq(variables['Build.Reason'],'Schedule'))
      # Set env variable SkipDevBuildNumber to generate package properties with non alpha version
      # Package version is used to create or update package work item from CI pipeline
      - pwsh: |
          echo "##vso[task.setvariable variable=SkipDevBuildNumber]true"
        displayName: "Set SkipDevBuildNumber env variable"
      - template: /eng/common/pipelines/templates/steps/daily-dev-build-variable.yml

      - pwsh: >
          dotnet build /t:ProjectDependsOn ./eng/service.proj
          /p:TestDependsOnDependency="Azure.Core"
          /p:IncludeSrc=false /p:IncludeStress=false /p:IncludeSamples=false
          /p:IncludePerf=false /p:RunApiCompat=false
          /p:InheritDocEnabled=false /p:BuildProjectReferences=false
          /p:OutputProjectFilePath="$(Build.SourcesDirectory)/Azure.Core_dependencylist.txt"
          /binaryLogger:LogFile=$(Build.ArtifactStagingDirectory)/save-package-props.binlog

      - template: /eng/common/pipelines/templates/steps/publish-1es-artifact.yml
        parameters:
          artifactName: BuildLinux
          artifactPath: $(Build.ArtifactStagingDirectory)
