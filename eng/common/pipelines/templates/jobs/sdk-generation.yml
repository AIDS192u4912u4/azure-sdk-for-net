parameters:
  - name: SpecRepoOwner
    type: string
    default: 'Azure'
  - name: SpecRepoName
    type: string
    default: 'azure-rest-api-specs'
  - name: SpecRepoBranch
    type: string
    default: 'main'
  - name: SpecRepoCommit
    type: string
    default: 'HEAD'
  - name: SdkRepoOwner
    type: string
  - name: SdkRepoName
    type: string
  - name: SdkRepoNameForSpecGen
    type: string
  - name: SdkRepoBranch
    type: string
    default: 'main'
  - name: ConfigType
    type: string
    values:
      - 'TypeSpec'
      - 'AutoRest'
  - name: TspConfigPath
    type: string
  - name: ReadmePath
    type: string
  - name: ApiVersion
    type: string
    default: 'not-specified'
  - name: CodePushRequired
    type: boolean
  - name: SdkPrRequired
    type: boolean

jobs:
- job:
  displayName: 'SDK Generation'
  variables:
    - template: /eng/pipelines/templates/variables/image.yml
    - name: SpecRepoDirectory
      value: $(System.DefaultWorkingDirectory)/${{ parameters.SpecRepoName }}
    - name: SdkRepoDirectory
      value: $(System.DefaultWorkingDirectory)/${{ parameters.SdkRepoName }}
    - name: NodeVersion
      value: '22.13.x'
    - name: PythonVersion
      value: '3.13'
    - name: SdkArtifactName
      value: SDK_Artifact
  pool:
    name: $(LINUXPOOL)
    vmImage: $(LINUXVMIMAGE)

  steps:
    - checkout: none

    - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
      parameters:
        Paths:
        - '/*'
        - '!sdk/**/test-recordings/*'
        - '!sdk/**/recordings/*'
        - '!sdk/**/SessionRecords/*'
        - '!sdk/**/session-records/*'
        Repositories:
        - Name: ${{ parameters.SpecRepoOwner }}/${{ parameters.SpecRepoName }}
          Commitish: ${{ parameters.SpecRepoBranch }}
          WorkingDirectory: $(SpecRepoDirectory)
        - Name: ${{ parameters.SdkRepoOwner }}/${{ parameters.SdkRepoName }}
          Commitish: ${{ parameters.SdkRepoBranch }}
          WorkingDirectory: $(SdkRepoDirectory)

    - script: |
        if [ "${{ parameters.SpecRepoCommit }}" = "HEAD" ]; then
          cd $(SpecRepoDirectory)
          default_commit=$(git rev-parse HEAD)
          echo "##vso[task.setvariable variable=SpecRepoCommit]$default_commit"
          echo "SpecRepoCommit variable set to default commit: $default_commit"
        else
          echo "##vso[task.setvariable variable=SpecRepoCommit]${{ parameters.SpecRepoCommit }}"
          echo "SpecRepoCommit variable set to: ${{ parameters.SpecRepoCommit }}"
        fi
      displayName: 'Set SpecRepoCommit variable'

    - task: NodeTool@0
      inputs:
        versionSpec: $(NodeVersion)
      displayName: 'Install Node.js'

    - task: UsePythonVersion@0
      inputs:
        versionSpec: $(PythonVersion)

    - script: |
        npm install -g @azure-tools/spec-gen-sdk
      displayName: 'Install spec-gen-sdk'

    - script: |
        optional_params=""
        sdk_gen_info="sdk generation from Config : "

        if [ "${{ parameters.ConfigType }}" = "TypeSpec" ]; then
          optional_params="$optional_params --tsp-config-relative-path ${{ parameters.TspConfigPath }}"
          sdk_gen_info="$sdk_gen_info '${{ parameters.TspConfigPath }}',"
        else
          optional_params="$optional_params --readme-relative-path ${{ parameters.ReadmePath }}"
          sdk_gen_info="$sdk_gen_info '${{ parameters.ReadmePath }}',"
        fi
        if [ "${{ parameters.ApiVersion }}" != "not-specified" ]; then
          optional_params="$optional_params --api-version ${{ parameters.ApiVersion }}"
          sdk_gen_info="$sdk_gen_info API Version: '${{ parameters.ApiVersion }}',"
        fi

        sdk_gen_info="$sdk_gen_info and CommitSHA: '$(SpecRepoCommit)'"
        echo "##vso[task.setvariable variable=GeneratedSDKInformation]$sdk_gen_info"
        echo "Generated SDK Information : $sdk_gen_info"

        spec-gen-sdk \
          --scp "$(SpecRepoDirectory)" \
          --sdp "$(SdkRepoDirectory)" \
          --wf "$(System.DefaultWorkingDirectory)" \
          -l "${{ parameters.SdkRepoNameForSpecGen }}" \
          -c "$(SpecRepoCommit)" \
          -t $true \
          $optional_params
      displayName: 'Generate SDK'

    - task: PublishPipelineArtifact@1
      displayName: Publish SDK ${sdkLanguage} Artifact to Pipeline Artifacts
      inputs:
        artifactName: $(sdkArtifactName)
        targetPath: "$(System.DefaultWorkingDirectory)/generatedSdkArtifacts"


    - ${{ if eq(parameters.CodePushRequired, true) }}:
      - template: /eng/common/pipelines/templates/steps/git-push-changes.yml
        parameters:
          BaseRepoBranch: sdk-generation-from-$(Build.DefinitionName)_$(Build.BuildId)
          BaseRepoOwner: azure-sdk
          CommitMsg: $(GeneratedSDKInformation)
          TargetRepoOwner: ${{ parameters.SdkRepoOwner }}
          TargetRepoName: ${{ parameters.SdkRepoName }}
          PushArgs: "--force"
          WorkingDirectory: $(SdkRepoDirectory)
          ScriptDirectory: $(SdkRepoDirectory)/eng/common/scripts

    - task: PowerShell@2
      displayName: Create pull request
      condition: and(succeeded(), eq('${{ parameters.SdkPrRequired }}', true), eq(variables['HasChanges'], 'true'))
      inputs:
        pwsh: true
        workingDirectory: $(SdkRepoDirectory)
        filePath: $(SdkRepoDirectory)/eng/common/scripts/Submit-PullRequest.ps1
        arguments: >
          -RepoOwner "${{ parameters.SdkRepoOwner }}"
          -RepoName "${{ parameters.SdkRepoName }}"
          -BaseBranch "main"
          -PROwner "azure-sdk"
          -PRBranch "sdk-generation-from-$(Build.DefinitionName)_$(Build.BuildId)"
          -AuthToken "$(azuresdk-github-pat)"
          -PRTitle "sdk-generation-from-$(Build.DefinitionName)_$(Build.BuildId)"
          -PRBody "$(GeneratedSDKInformation)"
          -OpenAsDraft $true

  