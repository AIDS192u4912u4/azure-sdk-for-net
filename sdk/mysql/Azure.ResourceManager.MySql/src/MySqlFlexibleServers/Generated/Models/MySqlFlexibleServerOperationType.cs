// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.ResourceManager.MySql.FlexibleServers.Models
{
    /// <summary> Identifies the type of source operation. </summary>
    internal readonly partial struct MySqlFlexibleServerOperationType : IEquatable<MySqlFlexibleServerOperationType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="MySqlFlexibleServerOperationType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public MySqlFlexibleServerOperationType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string BackupAndExportResponseValue = "BackupAndExportResponse";
        private const string ImportFromStorageResponseValue = "ImportFromStorageResponse";

        /// <summary> BackupAndExportResponse. </summary>
        public static MySqlFlexibleServerOperationType BackupAndExportResponse { get; } = new MySqlFlexibleServerOperationType(BackupAndExportResponseValue);
        /// <summary> ImportFromStorageResponse. </summary>
        public static MySqlFlexibleServerOperationType ImportFromStorageResponse { get; } = new MySqlFlexibleServerOperationType(ImportFromStorageResponseValue);
        /// <summary> Determines if two <see cref="MySqlFlexibleServerOperationType"/> values are the same. </summary>
        public static bool operator ==(MySqlFlexibleServerOperationType left, MySqlFlexibleServerOperationType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="MySqlFlexibleServerOperationType"/> values are not the same. </summary>
        public static bool operator !=(MySqlFlexibleServerOperationType left, MySqlFlexibleServerOperationType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="MySqlFlexibleServerOperationType"/>. </summary>
        public static implicit operator MySqlFlexibleServerOperationType(string value) => new MySqlFlexibleServerOperationType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is MySqlFlexibleServerOperationType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(MySqlFlexibleServerOperationType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
