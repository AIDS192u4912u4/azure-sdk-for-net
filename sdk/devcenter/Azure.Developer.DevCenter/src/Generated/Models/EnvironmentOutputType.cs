// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Azure.Developer.DevCenter.Models
{
    /// <summary> Type of the output value. </summary>
    public readonly partial struct EnvironmentOutputType : IEquatable<EnvironmentOutputType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="EnvironmentOutputType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public EnvironmentOutputType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ArrayValue = "array";
        private const string BooleanValue = "boolean";
        private const string NumberValue = "number";
        private const string ObjectValue = "object";
        private const string StringValue = "string";

        /// <summary> The output is an array of values. </summary>
        public static EnvironmentOutputType Array { get; } = new EnvironmentOutputType(ArrayValue);
        /// <summary> The output is a boolean value. </summary>
        public static EnvironmentOutputType Boolean { get; } = new EnvironmentOutputType(BooleanValue);
        /// <summary> The output is a number value. </summary>
        public static EnvironmentOutputType Number { get; } = new EnvironmentOutputType(NumberValue);
        /// <summary> The output is an object value. </summary>
        public static EnvironmentOutputType Object { get; } = new EnvironmentOutputType(ObjectValue);
        /// <summary> The output is a string value. </summary>
        public static EnvironmentOutputType String { get; } = new EnvironmentOutputType(StringValue);
        /// <summary> Determines if two <see cref="EnvironmentOutputType"/> values are the same. </summary>
        public static bool operator ==(EnvironmentOutputType left, EnvironmentOutputType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="EnvironmentOutputType"/> values are not the same. </summary>
        public static bool operator !=(EnvironmentOutputType left, EnvironmentOutputType right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="EnvironmentOutputType"/>. </summary>
        public static implicit operator EnvironmentOutputType(string value) => new EnvironmentOutputType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is EnvironmentOutputType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(EnvironmentOutputType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
