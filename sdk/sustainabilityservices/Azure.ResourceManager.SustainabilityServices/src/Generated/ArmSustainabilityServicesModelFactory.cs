// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.Models;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.SustainabilityServices.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class ArmSustainabilityServicesModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="SustainabilityServices.CalculationResourceData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="identity"> The managed service identities assigned to this resource. </param>
        /// <param name="sku"> The SKU (Stock Keeping Unit) assigned to this resource. </param>
        /// <returns> A new <see cref="SustainabilityServices.CalculationResourceData"/> instance for mocking. </returns>
        public static CalculationResourceData CalculationResourceData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IDictionary<string, string> tags = null, AzureLocation location = default, CalculationResourceProperties properties = null, ManagedServiceIdentity identity = null, SustainabilityServicesSku sku = null)
        {
            tags ??= new Dictionary<string, string>();

            return new CalculationResourceData(
                id,
                name,
                resourceType,
                systemData,
                tags,
                location,
                properties,
                identity,
                sku,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.CalculationResourceProperties"/>. </summary>
        /// <param name="provisioningState"> The status of the last operation. </param>
        /// <param name="version"> Calculation Resource Version. </param>
        /// <param name="tokenClaimsApplicationId"> Application Id for token claims. </param>
        /// <param name="ddosPlan"> DDoS Protection Plan. </param>
        /// <param name="serviceUri"> Service Url. </param>
        /// <param name="storageProfileId"> Profile of Storage Created. </param>
        /// <param name="akvProfileId"> Profile of AKV Created. </param>
        /// <param name="appServiceProfileId"> Profile of App Service Created. </param>
        /// <param name="redisProfileId"> Profile of Azure Redis Created. </param>
        /// <param name="monitoringProfileId"> Profile of Monitoring Resource Created. </param>
        /// <param name="azureFrontDoorProfileId"> Profile of Azure FrontDoor Resource Created. </param>
        /// <param name="cachingType"> Caching Type. </param>
        /// <param name="enablePublicEndpoint"> Enable Public Access. </param>
        /// <param name="managedOnBehalfOfMoboBrokerResources"> Managed On Behalf Of Configuration. </param>
        /// <param name="denyAssignmentExclusions"> Deny Assignments exclusion list. </param>
        /// <returns> A new <see cref="Models.CalculationResourceProperties"/> instance for mocking. </returns>
        public static CalculationResourceProperties CalculationResourceProperties(ProvisioningState? provisioningState = null, string version = null, string tokenClaimsApplicationId = null, string ddosPlan = null, string serviceUri = null, ResourceIdentifier storageProfileId = null, ResourceIdentifier akvProfileId = null, ResourceIdentifier appServiceProfileId = null, ResourceIdentifier redisProfileId = null, ResourceIdentifier monitoringProfileId = null, ResourceIdentifier azureFrontDoorProfileId = null, string cachingType = null, bool? enablePublicEndpoint = null, IEnumerable<SubResource> managedOnBehalfOfMoboBrokerResources = null, IEnumerable<DenyAssignmentExclusion> denyAssignmentExclusions = null)
        {
            managedOnBehalfOfMoboBrokerResources ??= new List<SubResource>();
            denyAssignmentExclusions ??= new List<DenyAssignmentExclusion>();

            return new CalculationResourceProperties(
                provisioningState,
                version,
                tokenClaimsApplicationId,
                ddosPlan,
                serviceUri,
                storageProfileId != null ? ResourceManagerModelFactory.SubResource(storageProfileId) : null,
                akvProfileId != null ? ResourceManagerModelFactory.SubResource(akvProfileId) : null,
                appServiceProfileId != null ? ResourceManagerModelFactory.SubResource(appServiceProfileId) : null,
                redisProfileId != null ? ResourceManagerModelFactory.SubResource(redisProfileId) : null,
                monitoringProfileId != null ? ResourceManagerModelFactory.SubResource(monitoringProfileId) : null,
                azureFrontDoorProfileId != null ? ResourceManagerModelFactory.SubResource(azureFrontDoorProfileId) : null,
                cachingType,
                enablePublicEndpoint,
                managedOnBehalfOfMoboBrokerResources != null ? new ManagedOnBehalfOfConfiguration(managedOnBehalfOfMoboBrokerResources?.ToList(), serializedAdditionalRawData: null) : null,
                denyAssignmentExclusions?.ToList(),
                serializedAdditionalRawData: null);
        }
    }
}
