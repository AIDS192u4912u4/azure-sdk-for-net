// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Resources.Models;

namespace Azure.ResourceManager.SustainabilityServices.Models
{
    /// <summary> Details of the SustainabilityServices Calculations. </summary>
    public partial class CalculationResourceProperties
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="CalculationResourceProperties"/>. </summary>
        /// <param name="tokenClaimsApplicationId"> Application Id for token claims. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="tokenClaimsApplicationId"/> is null. </exception>
        public CalculationResourceProperties(string tokenClaimsApplicationId)
        {
            Argument.AssertNotNull(tokenClaimsApplicationId, nameof(tokenClaimsApplicationId));

            TokenClaimsApplicationId = tokenClaimsApplicationId;
            DenyAssignmentExclusions = new ChangeTrackingList<DenyAssignmentExclusion>();
        }

        /// <summary> Initializes a new instance of <see cref="CalculationResourceProperties"/>. </summary>
        /// <param name="provisioningState"> The status of the last operation. </param>
        /// <param name="version"> Calculation Resource Version. </param>
        /// <param name="tokenClaimsApplicationId"> Application Id for token claims. </param>
        /// <param name="ddosPlan"> DDoS Protection Plan. </param>
        /// <param name="serviceUri"> Service Url. </param>
        /// <param name="storageProfile"> Profile of Storage Created. </param>
        /// <param name="akvProfile"> Profile of AKV Created. </param>
        /// <param name="appServiceProfile"> Profile of App Service Created. </param>
        /// <param name="redisProfile"> Profile of Azure Redis Created. </param>
        /// <param name="monitoringProfile"> Profile of Monitoring Resource Created. </param>
        /// <param name="azureFrontDoorProfile"> Profile of Azure FrontDoor Resource Created. </param>
        /// <param name="cachingType"> Caching Type. </param>
        /// <param name="enablePublicEndpoint"> Enable Public Access. </param>
        /// <param name="managedOnBehalfOfConfiguration"> Managed On Behalf Of Configuration. </param>
        /// <param name="denyAssignmentExclusions"> Deny Assignments exclusion list. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal CalculationResourceProperties(ProvisioningState? provisioningState, string version, string tokenClaimsApplicationId, string ddosPlan, string serviceUri, SubResource storageProfile, SubResource akvProfile, SubResource appServiceProfile, SubResource redisProfile, SubResource monitoringProfile, SubResource azureFrontDoorProfile, string cachingType, bool? enablePublicEndpoint, ManagedOnBehalfOfConfiguration managedOnBehalfOfConfiguration, IList<DenyAssignmentExclusion> denyAssignmentExclusions, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            ProvisioningState = provisioningState;
            Version = version;
            TokenClaimsApplicationId = tokenClaimsApplicationId;
            DdosPlan = ddosPlan;
            ServiceUri = serviceUri;
            StorageProfile = storageProfile;
            AkvProfile = akvProfile;
            AppServiceProfile = appServiceProfile;
            RedisProfile = redisProfile;
            MonitoringProfile = monitoringProfile;
            AzureFrontDoorProfile = azureFrontDoorProfile;
            CachingType = cachingType;
            EnablePublicEndpoint = enablePublicEndpoint;
            ManagedOnBehalfOfConfiguration = managedOnBehalfOfConfiguration;
            DenyAssignmentExclusions = denyAssignmentExclusions;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="CalculationResourceProperties"/> for deserialization. </summary>
        internal CalculationResourceProperties()
        {
        }

        /// <summary> The status of the last operation. </summary>
        public ProvisioningState? ProvisioningState { get; }
        /// <summary> Calculation Resource Version. </summary>
        public string Version { get; set; }
        /// <summary> Application Id for token claims. </summary>
        public string TokenClaimsApplicationId { get; set; }
        /// <summary> DDoS Protection Plan. </summary>
        public string DdosPlan { get; set; }
        /// <summary> Service Url. </summary>
        public string ServiceUri { get; }
        /// <summary> Profile of Storage Created. </summary>
        internal SubResource StorageProfile { get; }
        /// <summary> Gets Id. </summary>
        public ResourceIdentifier StorageProfileId
        {
            get => StorageProfile?.Id;
        }

        /// <summary> Profile of AKV Created. </summary>
        internal SubResource AkvProfile { get; }
        /// <summary> Gets Id. </summary>
        public ResourceIdentifier AkvProfileId
        {
            get => AkvProfile?.Id;
        }

        /// <summary> Profile of App Service Created. </summary>
        internal SubResource AppServiceProfile { get; }
        /// <summary> Gets Id. </summary>
        public ResourceIdentifier AppServiceProfileId
        {
            get => AppServiceProfile?.Id;
        }

        /// <summary> Profile of Azure Redis Created. </summary>
        internal SubResource RedisProfile { get; }
        /// <summary> Gets Id. </summary>
        public ResourceIdentifier RedisProfileId
        {
            get => RedisProfile?.Id;
        }

        /// <summary> Profile of Monitoring Resource Created. </summary>
        internal SubResource MonitoringProfile { get; }
        /// <summary> Gets Id. </summary>
        public ResourceIdentifier MonitoringProfileId
        {
            get => MonitoringProfile?.Id;
        }

        /// <summary> Profile of Azure FrontDoor Resource Created. </summary>
        internal SubResource AzureFrontDoorProfile { get; }
        /// <summary> Gets Id. </summary>
        public ResourceIdentifier AzureFrontDoorProfileId
        {
            get => AzureFrontDoorProfile?.Id;
        }

        /// <summary> Caching Type. </summary>
        public string CachingType { get; set; }
        /// <summary> Enable Public Access. </summary>
        public bool? EnablePublicEndpoint { get; set; }
        /// <summary> Managed On Behalf Of Configuration. </summary>
        internal ManagedOnBehalfOfConfiguration ManagedOnBehalfOfConfiguration { get; }
        /// <summary> Associated MoboBrokerResources. </summary>
        public IReadOnlyList<SubResource> ManagedOnBehalfOfMoboBrokerResources
        {
            get => ManagedOnBehalfOfConfiguration?.MoboBrokerResources;
        }

        /// <summary> Deny Assignments exclusion list. </summary>
        public IList<DenyAssignmentExclusion> DenyAssignmentExclusions { get; }
    }
}
