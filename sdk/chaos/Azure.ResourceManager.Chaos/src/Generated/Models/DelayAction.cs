// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.ResourceManager.Chaos.Models
{
    /// <summary> Model that represents a delay action. </summary>
    public partial class DelayAction : ChaosExperimentAction
    {
        /// <summary> Initializes a new instance of <see cref="DelayAction"/>. </summary>
        /// <param name="name"> String that represents a Capability URN. </param>
        /// <param name="duration"> ISO8601 formatted string that represents a duration. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="name"/> is null. </exception>
        public DelayAction(string name, TimeSpan duration) : base(name)
        {
            Argument.AssertNotNull(name, nameof(name));

            Duration = duration;
            Type = ExperimentActionType.Delay;
        }

        /// <summary> Initializes a new instance of <see cref="DelayAction"/>. </summary>
        /// <param name="name"> String that represents a Capability URN. </param>
        /// <param name="type"> Chaos experiment action discriminator type. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="duration"> ISO8601 formatted string that represents a duration. </param>
        internal DelayAction(string name, ExperimentActionType type, IDictionary<string, BinaryData> serializedAdditionalRawData, TimeSpan duration) : base(name, type, serializedAdditionalRawData)
        {
            Duration = duration;
            Type = type;
        }

        /// <summary> Initializes a new instance of <see cref="DelayAction"/> for deserialization. </summary>
        internal DelayAction()
        {
        }

        /// <summary> ISO8601 formatted string that represents a duration. </summary>
        public TimeSpan Duration { get; set; }
    }
}
