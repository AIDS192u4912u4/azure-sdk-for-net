// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.AI.Speech.Transcription
{
    internal static partial class StatusExtensions
    {
        public static string ToSerialString(this Status value) => value switch
        {
            Status.NotStarted => "NotStarted",
            Status.Running => "Running",
            Status.Succeeded => "Succeeded",
            Status.Failed => "Failed",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown Status value.")
        };

        public static Status ToStatus(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "NotStarted")) return Status.NotStarted;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Running")) return Status.Running;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Succeeded")) return Status.Succeeded;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Failed")) return Status.Failed;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown Status value.");
        }
    }
}
