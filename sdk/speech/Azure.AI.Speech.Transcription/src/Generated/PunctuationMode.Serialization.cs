// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.AI.Speech.Transcription
{
    internal static partial class PunctuationModeExtensions
    {
        public static string ToSerialString(this PunctuationMode value) => value switch
        {
            PunctuationMode.None => "None",
            PunctuationMode.Dictated => "Dictated",
            PunctuationMode.Automatic => "Automatic",
            PunctuationMode.DictatedAndAutomatic => "DictatedAndAutomatic",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown PunctuationMode value.")
        };

        public static PunctuationMode ToPunctuationMode(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "None")) return PunctuationMode.None;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Dictated")) return PunctuationMode.Dictated;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Automatic")) return PunctuationMode.Automatic;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "DictatedAndAutomatic")) return PunctuationMode.DictatedAndAutomatic;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown PunctuationMode value.");
        }
    }
}
