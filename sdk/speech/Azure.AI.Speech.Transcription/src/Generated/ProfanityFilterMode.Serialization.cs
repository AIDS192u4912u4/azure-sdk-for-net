// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.AI.Speech.Transcription
{
    internal static partial class ProfanityFilterModeExtensions
    {
        public static string ToSerialString(this ProfanityFilterMode value) => value switch
        {
            ProfanityFilterMode.None => "None",
            ProfanityFilterMode.Removed => "Removed",
            ProfanityFilterMode.Tags => "Tags",
            ProfanityFilterMode.Masked => "Masked",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ProfanityFilterMode value.")
        };

        public static ProfanityFilterMode ToProfanityFilterMode(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "None")) return ProfanityFilterMode.None;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Removed")) return ProfanityFilterMode.Removed;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Tags")) return ProfanityFilterMode.Tags;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "Masked")) return ProfanityFilterMode.Masked;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ProfanityFilterMode value.");
        }
    }
}
