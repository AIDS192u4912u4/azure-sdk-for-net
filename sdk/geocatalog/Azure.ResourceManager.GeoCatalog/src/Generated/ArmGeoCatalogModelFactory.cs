// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;
using Azure.ResourceManager.Models;

namespace Azure.ResourceManager.GeoCatalog.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class ArmGeoCatalogModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="GeoCatalog.GeoCatalogData"/>. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="tags"> The tags. </param>
        /// <param name="location"> The location. </param>
        /// <param name="tier"> Tier of the catalog. This cannot be changed after the catalog is created. If not provided, defaults to Basic. </param>
        /// <param name="catalogUri"> The URI of the catalog management UI. </param>
        /// <param name="provisioningState"> The status of the last operation. </param>
        /// <returns> A new <see cref="GeoCatalog.GeoCatalogData"/> instance for mocking. </returns>
        public static GeoCatalogData GeoCatalogData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, IDictionary<string, string> tags = null, AzureLocation location = default, CatalogTier? tier = null, Uri catalogUri = null, ProvisioningState? provisioningState = null)
        {
            tags ??= new Dictionary<string, string>();

            return new GeoCatalogData(
                id,
                name,
                resourceType,
                systemData,
                tags,
                location,
                tier,
                catalogUri,
                provisioningState,
                serializedAdditionalRawData: null);
        }
    }
}
