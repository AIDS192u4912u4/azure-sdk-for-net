// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.EdgeOrder.Models
{
    public partial class DeviceConfigurations : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(HostName))
            {
                writer.WritePropertyName("hostName"u8);
                writer.WriteStringValue(HostName);
            }
            if (Optional.IsCollectionDefined(NetworkConfigurations))
            {
                writer.WritePropertyName("networkConfigurations"u8);
                writer.WriteStartArray();
                foreach (var item in NetworkConfigurations)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(TimeServerConfiguration))
            {
                writer.WritePropertyName("timeServerConfiguration"u8);
                writer.WriteObjectValue(TimeServerConfiguration);
            }
            if (Optional.IsDefined(ConnectivityConfiguration))
            {
                writer.WritePropertyName("connectivityConfiguration"u8);
                writer.WriteObjectValue(ConnectivityConfiguration);
            }
            writer.WriteEndObject();
        }

        internal static DeviceConfigurations DeserializeDeviceConfigurations(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            Optional<string> hostName = default;
            Optional<IList<NetworkConfiguration>> networkConfigurations = default;
            Optional<TimeServerConfiguration> timeServerConfiguration = default;
            Optional<ConnectivityConfiguration> connectivityConfiguration = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("hostName"u8))
                {
                    hostName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("networkConfigurations"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<NetworkConfiguration> array = new List<NetworkConfiguration>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(NetworkConfiguration.DeserializeNetworkConfiguration(item));
                    }
                    networkConfigurations = array;
                    continue;
                }
                if (property.NameEquals("timeServerConfiguration"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    timeServerConfiguration = TimeServerConfiguration.DeserializeTimeServerConfiguration(property.Value);
                    continue;
                }
                if (property.NameEquals("connectivityConfiguration"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    connectivityConfiguration = ConnectivityConfiguration.DeserializeConnectivityConfiguration(property.Value);
                    continue;
                }
            }
            return new DeviceConfigurations(hostName.Value, Optional.ToList(networkConfigurations), timeServerConfiguration.Value, connectivityConfiguration.Value);
        }
    }
}
