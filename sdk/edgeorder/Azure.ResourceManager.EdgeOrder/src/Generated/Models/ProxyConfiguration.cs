// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;

namespace Azure.ResourceManager.EdgeOrder.Models
{
    /// <summary> Represents Configuration for Proxy. </summary>
    public partial class ProxyConfiguration
    {
        /// <summary> Initializes a new instance of ProxyConfiguration. </summary>
        /// <param name="uri"> Proxy connection URL. </param>
        /// <param name="port"> Proxy port. </param>
        /// <param name="bypassUrls"> Bypass URLs from proxy. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="uri"/> or <paramref name="bypassUrls"/> is null. </exception>
        public ProxyConfiguration(Uri uri, int port, IEnumerable<string> bypassUrls)
        {
            Argument.AssertNotNull(uri, nameof(uri));
            Argument.AssertNotNull(bypassUrls, nameof(bypassUrls));

            Uri = uri;
            Port = port;
            BypassUrls = bypassUrls.ToList();
        }

        /// <summary> Initializes a new instance of ProxyConfiguration. </summary>
        /// <param name="uri"> Proxy connection URL. </param>
        /// <param name="port"> Proxy port. </param>
        /// <param name="bypassUrls"> Bypass URLs from proxy. </param>
        internal ProxyConfiguration(Uri uri, int port, IList<string> bypassUrls)
        {
            Uri = uri;
            Port = port;
            BypassUrls = bypassUrls;
        }

        /// <summary> Proxy connection URL. </summary>
        public Uri Uri { get; set; }
        /// <summary> Proxy port. </summary>
        public int Port { get; set; }
        /// <summary> Bypass URLs from proxy. </summary>
        public IList<string> BypassUrls { get; }
    }
}
