// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure.Core;

namespace Azure.ResourceManager.EdgeOrder.Models
{
    /// <summary> Represents connectivity configuration properties. </summary>
    public partial class ConnectivityConfigurationProperties
    {
        /// <summary> Initializes a new instance of ConnectivityConfigurationProperties. </summary>
        /// <param name="timezone"> Timezone value. </param>
        /// <param name="connectivityType"> Connectivity type: Public/Proxy. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="timezone"/> or <paramref name="connectivityType"/> is null. </exception>
        public ConnectivityConfigurationProperties(string timezone, string connectivityType)
        {
            Argument.AssertNotNull(timezone, nameof(timezone));
            Argument.AssertNotNull(connectivityType, nameof(connectivityType));

            Timezone = timezone;
            ConnectivityType = connectivityType;
        }

        /// <summary> Initializes a new instance of ConnectivityConfigurationProperties. </summary>
        /// <param name="timezone"> Timezone value. </param>
        /// <param name="connectivityType"> Connectivity type: Public/Proxy. </param>
        /// <param name="proxyConfiguration"> Configuration for proxy. </param>
        internal ConnectivityConfigurationProperties(string timezone, string connectivityType, ProxyConfiguration proxyConfiguration)
        {
            Timezone = timezone;
            ConnectivityType = connectivityType;
            ProxyConfiguration = proxyConfiguration;
        }

        /// <summary> Timezone value. </summary>
        public string Timezone { get; set; }
        /// <summary> Connectivity type: Public/Proxy. </summary>
        public string ConnectivityType { get; set; }
        /// <summary> Configuration for proxy. </summary>
        public ProxyConfiguration ProxyConfiguration { get; set; }
    }
}
