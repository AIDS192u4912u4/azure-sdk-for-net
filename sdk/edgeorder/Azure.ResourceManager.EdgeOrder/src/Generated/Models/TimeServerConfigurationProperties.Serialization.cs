// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.EdgeOrder.Models
{
    public partial class TimeServerConfigurationProperties : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("timezone"u8);
            writer.WriteStringValue(Timezone);
            writer.WritePropertyName("ntpConfigurationChoice"u8);
            writer.WriteStringValue(NtpConfigurationChoice);
            if (Optional.IsDefined(NtpServerConfiguration))
            {
                writer.WritePropertyName("ntpServerConfiguration"u8);
                writer.WriteObjectValue(NtpServerConfiguration);
            }
            writer.WriteEndObject();
        }

        internal static TimeServerConfigurationProperties DeserializeTimeServerConfigurationProperties(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            string timezone = default;
            string ntpConfigurationChoice = default;
            Optional<NtpServerConfiguration> ntpServerConfiguration = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("timezone"u8))
                {
                    timezone = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ntpConfigurationChoice"u8))
                {
                    ntpConfigurationChoice = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("ntpServerConfiguration"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    ntpServerConfiguration = NtpServerConfiguration.DeserializeNtpServerConfiguration(property.Value);
                    continue;
                }
            }
            return new TimeServerConfigurationProperties(timezone, ntpConfigurationChoice, ntpServerConfiguration.Value);
        }
    }
}
