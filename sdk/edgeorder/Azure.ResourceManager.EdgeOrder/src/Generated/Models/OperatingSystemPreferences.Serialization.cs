// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.ResourceManager.EdgeOrder.Models
{
    public partial class OperatingSystemPreferences : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("operatingSystemType"u8);
            writer.WriteStringValue(OperatingSystemType.ToString());
            writer.WritePropertyName("operatingSystemVersion"u8);
            writer.WriteStringValue(OperatingSystemVersion);
            writer.WritePropertyName("adminUserName"u8);
            writer.WriteStringValue(AdminUserName);
            writer.WritePropertyName("adminPassword"u8);
            writer.WriteObjectValue(AdminPassword);
            writer.WriteEndObject();
        }

        internal static OperatingSystemPreferences DeserializeOperatingSystemPreferences(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            OperatingSystemType operatingSystemType = default;
            string operatingSystemVersion = default;
            string adminUserName = default;
            KeyVaultSecret adminPassword = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("operatingSystemType"u8))
                {
                    operatingSystemType = new OperatingSystemType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("operatingSystemVersion"u8))
                {
                    operatingSystemVersion = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("adminUserName"u8))
                {
                    adminUserName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("adminPassword"u8))
                {
                    adminPassword = KeyVaultSecret.DeserializeKeyVaultSecret(property.Value);
                    continue;
                }
            }
            return new OperatingSystemPreferences(operatingSystemType, operatingSystemVersion, adminUserName, adminPassword);
        }
    }
}
